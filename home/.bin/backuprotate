#!/bin/bash

CONFIGDIR="$HOME/.config/nalabelle/backups"
CONFIGNAME="default"
CONFIGFILE="$CONFIGNAME.rotate.conf.example"


if [ ! -d $CONFIGDIR ]; then
  mkdir -p $CONFIGDIR
  if [ ! -f $CONFIGDIR/$CONFIGFILE ]; then
    cat > $CONFIGDIR/$CONFIGFILE << EOF
# Example Backup Configuration

## Date Format
DATEFORMAT='+%Y-%m-%d_%H%M%S'

## Delete backups older than X days
DAYSTOKEEP=20

## Source information
SOURCE="\$HOME/Backup/"

## Destination information
DESTINATION="\$HOME/Backup/"

EOF
  fi
fi

help() {
  cat << EOF
usage: $0 options config action

This script rotates my backups.

It assumes a bunch of things. You probably shouldn't use it. Go away.

OPTIONS:
-h  Show this message
-v  Output more information for debugging
-d  Do a dry run to see what would be done

Config file should be placed in the config directory. The extension will be automatically appended.

Actions are listed by using ? in place of the action.

EOF
}

rotate() {
  if [ ! -d $FOLDER ]; then
    if $DRYRUN; then
      echo "mkdir -p $FOLDER"
    else
      mkdir -p $FOLDER
    fi
  else
    if $VERBOSE; then
      echo "$FOLDER exists"
    fi
  fi

  if [ -d $SOURCE ] || [ -f $SOURCE ]; then
    FILENAME="${FOLDER}/${CONFIGNAME}_$(date $DATEFORMAT)"
    if [[ "$FORMAT" == "7z" ]]; then
      FILENAME="$FILENAME.7z"
      if $VERBOSE; then
        echo "FILENAME: $FILENAME"
      fi
      if $DRYRUN; then
        echo "7za a $FILENAME $SOURCE"
      else
        7za a $FILENAME $SOURCE
      fi
    fi

    if [[ "$FORMAT" == "tar" ]]; then
      FILENAME="$FILENAME.tgz"
      if $VERBOSE; then
        echo "FILENAME: $FILENAME"
      fi
      if $DRYRUN; then
        echo "tar zcvf $FILENAME $SOURCE"
      else
        tar zcvf $FILENAME $SOURCE
      fi
    fi
  fi
}

delete() {
  FILEEXT=""
  if [[ "$FORMAT" == "7z" ]]; then
    FILEEXT="*.7z"
  fi
  if [[ "$FORMAT" == "tar" ]]; then
    FILEEXT="*.tgz"
  fi

  if $DRYRUN; then
    echo "find $DESTINATION -maxdepth 1 -mtime +$DAYSTOKEEP -name \"$CONFIGNAME$FILEEXT\" -exec rm {} \;"
    find $DESTINATION -maxdepth 1 -mtime +$DAYSTOKEEP -name "$FILEEXT"
  else
    find $DESTINATION -maxdepth 1 -mtime +$DAYSTOKEEP -name "$FILEEXT" -exec rm {} \;
  fi
}

VERBOSE=false
DRYRUN=false

while getopts "hvd" OPTION; do
  case $OPTION in
    h)
      help
      exit 0
      ;;
    v)
      VERBOSE=true
      ;;
    d)
      DRYRUN=true
      ;;
    ?)
      help
      exit 0
      ;;
  esac
done

shift $((OPTIND-1))

if [ -z $1 ]; then
  echo "Please specify a configuration file"
  help
  exit 0
fi

CONFIGNAME=${1}
CONFIGFILE="$CONFIGNAME.rotate.conf"

#Defaults
DATEFORMAT='+%Y-%m-%d_%H%M%S'
DAYSTOKEEP=20
SOURCE="$HOME/Backup/"
DESTINATION="$HOME/Backup/"

if [ ! -f $CONFIGDIR/$CONFIGFILE ]; then
  echo "Invalid configuration file"
  help
  exit 0
fi

. $CONFIGDIR/$CONFIGFILE

DESTINATION=${DESTINATION%/}
FOLDER=$DESTINATION

FORMAT=`which 7za`
if [ -z $FORMAT ]; then
  FORMAT="tar"
else
  FORMAT="7z"
fi

if $VERBOSE; then
  echo "FORMAT: $FORMAT"
fi

case $2 in
  both)
    rotate
    delete
    ;;
  *)
    echo "Please specify an action: both"
    help
    exit 0
    ;;
esac

exit 0
