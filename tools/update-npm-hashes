#!/usr/bin/env bash
set -euo pipefail

# Development tool to update npmDepsHash values in Nix files
# Usage: ./tools/update-npm-hashes [package-name]

update_hash() {
    local nix_file="$1"
    local package_name="$2"

    echo "Updating hash for $nix_file..."

    # Build with empty hash to get the correct hash from error message
    local temp_file
    temp_file=$(mktemp)
    sed 's/npmDepsHash = "sha256-[^"]*"/npmDepsHash = "sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="/' "$nix_file" > "$temp_file"
    mv "$temp_file" "$nix_file"

    # Try to build and capture the correct hash from error message
    local correct_hash=""
    local build_output
    build_output=$(mktemp)

    if nix build --no-link ".#packages.x86_64-linux.$package_name" 2>&1 | tee "$build_output"; then
        echo "Build succeeded unexpectedly"
        rm -f "$build_output"
        return 1
    fi

    # Extract the correct hash from the error message
    if correct_hash=$(grep -o 'got: *sha256-[A-Za-z0-9+/=]*' "$build_output" | head -1 | sed 's/.*got: *//'); then
        if [[ -n "$correct_hash" ]]; then
            sed -i "s|npmDepsHash = \"sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\"|npmDepsHash = \"$correct_hash\"|" "$nix_file"
            echo "Updated $nix_file with hash: $correct_hash"
            rm -f "$build_output"
            return 0
        fi
    fi

    echo "Could not determine correct hash for $nix_file"
    rm -f "$build_output"
    return 1
}

# Main logic
if [[ $# -eq 1 ]]; then
    # Update specific package
    package_name="$1"
    nix_file="packages/${package_name}.nix"
    package_dir="packages/${package_name}"

    if [[ ! -f "$nix_file" ]]; then
        echo "Error: $nix_file not found"
        exit 1
    fi

    if [[ ! -d "$package_dir" ]]; then
        echo "Error: $package_dir not found"
        exit 1
    fi

    update_hash "$nix_file" "$package_name"
else
    # Update all npm packages
    for nix_file in packages/*.nix; do
        if grep -q "buildNpmPackage\|npmDepsHash" "$nix_file"; then
            package_name=$(basename "$nix_file" .nix)
            package_dir="packages/${package_name}"

            if [[ -d "$package_dir" && -f "$package_dir/package.json" ]]; then
                update_hash "$nix_file" "$package_name" || true
            fi
        fi
    done
fi

echo "Hash update complete!"
